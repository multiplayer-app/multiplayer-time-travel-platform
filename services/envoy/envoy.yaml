static_resources:
  listeners:
    - name: listener_http
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 8080
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_http
                upgrade_configs:
                  - upgrade_type: websocket
                route_config:
                  name: local_route
                  virtual_hosts:
                    - name: backend
                      domains: ["*"]
                      routes:
                        - match: { prefix: "/v1/timegate" }
                          route: { prefix_rewrite: "/v1/timegate", cluster: timegate_service }

                        - match: { prefix: "/v1/timegate/ws" }
                          route:
                            prefix_rewrite: "/v1/timegate/ws"
                            cluster: timegate_service
                            upgrade_configs:
                              - upgrade_type: websocket

                        - match: { prefix: "/v1/epoch-engine" }
                          route: { prefix_rewrite: "/v1/epoch-engine", cluster: epoch_engine_service }

                        - match: { prefix: "/v1/minds-of-time" }
                          route: { prefix_rewrite: "/v1/minds-of-time", cluster: minds_of_time_service }

                        - match: { prefix: "/v1/vault-of-time" }
                          route: { prefix_rewrite: "/v1/vault-of-time", cluster: vault_of_time_service }

                        - match: { prefix: "/v1/dialogue-hub" }
                          route: { prefix_rewrite: "/v1/dialogue-hub", cluster: dialogue_hub_service }

                        - match: { prefix: "/v1/time-warp" }
                          route: { prefix_rewrite: "/v1/time-warp", cluster: time_warp_service }

                        # - match: { prefix: "/v1/traces" }
                        #   route: { prefix_rewrite: "/v1/traces", cluster: otel_collector_service }

                        # - match: { prefix: "/v1/logs" }
                        #   route: { prefix_rewrite: "/v1/logs", cluster: otel_collector_service }

                        # - match: { prefix: "/jaeger/v1/traces" }
                        #   route: { prefix_rewrite: "/v1/traces", cluster: jaeger_service }

                        - match: { prefix: "/" }
                          route: { prefix_rewrite: "/", cluster: frontend_service }
                http_filters:
                  - name: envoy.filters.http.wasm
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.wasm.v3.Wasm
                      config:
                        vm_config:
                          runtime: "envoy.wasm.runtime.v8"
                          code:
                            local:
                              filename: "/etc/istio/extensions/otlp_capture_payload.wasm"
                        configuration:
                          "@type": type.googleapis.com/google.protobuf.StringValue
                          value: |
                            {
                              "otlp_collector_cluster_name": "otel-collector",
                              "otlp_collector_authority": "api.multiplayer.app",
                              "otlp_collector_path": "/v1/traces",
                              "otlp_collector_api_key": "${MULTIPLAYER_OTLP_KEY:-}",
                              "capture_request_headers": true,
                              "capture_request_body": true,
                              "capture_response_headers": true,
                              "capture_response_body": true,
                              "max_body_size_bytes": 1048576,
                              "headers_to_include": ["content-type", "user-agent", "x-request-id"],
                              "headers_to_exclude": ["authorization", "x-api-key"],
                              "is_mask_body_enabled": true,
                              "is_mask_headers_enabled": true,
                              "mask_body_fields_list": ["password", "token", "secret", "api_key", "message"],
                              "mask_headers_list": ["authorization", "cookie", "set-cookie"]
                            }
                  - name: envoy.filters.http.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router

  clusters:
    - name: timegate_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: timegate_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-timegate, port_value: 3000 }

    - name: epoch_engine_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: epoch_engine_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-epoch-engine, port_value: 3000 }

    - name: minds_of_time_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: LEAST_REQUEST
      load_assignment:
        cluster_name: minds_of_time_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-minds-of-time, port_value: 3000 }

    - name: vault_of_time_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: vault_of_time_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-vault-of-time, port_value: 3000 }

    - name: dialogue_hub_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: LEAST_REQUEST
      load_assignment:
        cluster_name: dialogue_hub_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-dialogue-hub, port_value: 3000 }

    - name: time_warp_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: LEAST_REQUEST
      load_assignment:
        cluster_name: time_warp_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-time-warp, port_value: 8080 }

    # - name: otel_collector_service
    #   connect_timeout: 0.25s
    #   type: logical_dns
    #   lb_policy: ROUND_ROBIN
    #   load_assignment:
    #     cluster_name: otel_collector_service
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address: { address: host.docker.internal, port_value: 7318 }

    # - name: jaeger_service
    #   connect_timeout: 0.25s
    #   type: logical_dns
    #   lb_policy: ROUND_ROBIN
    #   load_assignment:
    #     cluster_name: jaeger_service
    #     endpoints:
    #       - lb_endpoints:
    #           - endpoint:
    #               address:
    #                 socket_address: { address: host.docker.internal, port_value: 6318 }

    - name: frontend_service
      connect_timeout: 0.25s
      type: logical_dns
      lb_policy: ROUND_ROBIN
      load_assignment:
        cluster_name: frontend_service
        endpoints:
          - lb_endpoints:
              - endpoint:
                  address:
                    socket_address: { address: mp-time-travel-web-app, port_value: 3000 }

# admin:
#   access_log_path: /tmp/admin_access.log
#   address:
#     socket_address:
#       address: 127.0.0.1
#       port_value: 9901

    # - name: otel-collector
    #   connect_timeout: 0.25s
    #   type: STRICT_DNS
    #   lb_policy: ROUND_ROBIN
    #   load_assignment:
    #     cluster_name: otel-collector
    #     endpoints:
    #     - lb_endpoints:
    #       - endpoint:
    #           address:
    #             socket_address:
    #               address: api.staging-multiplayer.com
    #               port_value: 443
    #               # address: api.multiplayer.app
    #               # port_value: 443
    #             tls_context:
    #               sni: "api.multiplayer.app"


    - name: otel-collector
      connect_timeout: 5s
      type: STRICT_DNS
      lb_policy: ROUND_ROBIN
      transport_socket:
        name: envoy.transport_sockets.tls
        typed_config:
          "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.UpstreamTlsContext
          sni: api.multiplayer.app
      load_assignment:
        cluster_name: otel-collector
        endpoints:
        - lb_endpoints:
          - endpoint:
              address:
                socket_address:
                  address: api.multiplayer.app
                  port_value: 443
