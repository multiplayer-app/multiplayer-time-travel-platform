name: build

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Get short commit hash
        id: commit
        uses: pr-mpt/actions-commit-hash@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Set custom Docker tag
        run: echo "DOCKER_TAG=${GITHUB_REF_NAME//\//-}-${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Build and push dialogue-hub
        uses: docker/build-push-action@v6
        with:
          context: ./services/dialogue-hub
          push: true
          tags: multiplayerapp/dialogue-hub:${{ env.DOCKER_TAG }}
          build-args: |
            SERVICE_VERSION: ${{ env.DOCKER_TAG }}

      - name: Make release for dialogue-hub
        env:
          MULTIPLAYER_WORKSPACE_ID: ${{ vars.MULTIPLAYER_WORKSPACE_ID }}
          MULTIPLAYER_PROJECT_ID: ${{ vars.MULTIPLAYER_PROJECT_ID }}
          MULTIPLAYER_HOST: ${{ vars.MULTIPLAYER_HOST }}
          MULTIPLAYER_API_KEY: ${{ secrets.MULTIPLAYER_API_KEY }}
          COMMIT_SHORT: ${{ steps.commit.outputs.short }}
          COMMIT_SHA: ${{ github.sha }}
          PARENT_BRANCH: ${{ github.head_ref || github.ref_name }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SERVICE_VERSION: ${{ env.DOCKER_TAG }}
        run: |
          cd ./services/dialogue-hub
          bash ../../create-multiplayer-release.sh

      - name: Build and push epoch-engine
        uses: docker/build-push-action@v6
        with:
          context: ./services/epoch-engine
          push: true
          tags: multiplayerapp/epoch-engine:${{ env.DOCKER_TAG }}
          build-args: |
            SERVICE_VERSION: ${{ env.DOCKER_TAG }}

      - name: Make release for epoch-engine
        env:
          MULTIPLAYER_WORKSPACE_ID: ${{ vars.MULTIPLAYER_WORKSPACE_ID }}
          MULTIPLAYER_PROJECT_ID: ${{ vars.MULTIPLAYER_PROJECT_ID }}
          MULTIPLAYER_HOST: ${{ vars.MULTIPLAYER_HOST }}
          MULTIPLAYER_API_KEY: ${{ secrets.MULTIPLAYER_API_KEY }}
          COMMIT_SHORT: ${{ steps.commit.outputs.short }}
          COMMIT_SHA: ${{ github.sha }}
          PARENT_BRANCH: ${{ github.head_ref || github.ref_name }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SERVICE_VERSION: ${{ env.DOCKER_TAG }}
        run: |
          cd ./services/epoch-engine
          bash ../../create-multiplayer-release.sh

      - name: Build and push minds-of-time
        uses: docker/build-push-action@v6
        with:
          context: ./services/minds-of-time
          push: true
          tags: multiplayerapp/minds-of-time:${{ env.DOCKER_TAG }}
          build-args: |
            SERVICE_VERSION: ${{ env.DOCKER_TAG }}

      - name: Make release for minds-of-time
        env:
          MULTIPLAYER_WORKSPACE_ID: ${{ vars.MULTIPLAYER_WORKSPACE_ID }}
          MULTIPLAYER_PROJECT_ID: ${{ vars.MULTIPLAYER_PROJECT_ID }}
          MULTIPLAYER_HOST: ${{ vars.MULTIPLAYER_HOST }}
          MULTIPLAYER_API_KEY: ${{ secrets.MULTIPLAYER_API_KEY }}
          COMMIT_SHORT: ${{ steps.commit.outputs.short }}
          COMMIT_SHA: ${{ github.sha }}
          PARENT_BRANCH: ${{ github.head_ref || github.ref_name }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SERVICE_VERSION: ${{ env.DOCKER_TAG }}
        run: |
          cd ./services/minds-of-time
          bash ../../create-multiplayer-release.sh

      - name: Build and push timegate
        uses: docker/build-push-action@v6
        with:
          context: ./services/timegate
          push: true
          tags: multiplayerapp/timegate:${{ env.DOCKER_TAG }}
          build-args: |
            SERVICE_VERSION: ${{ env.DOCKER_TAG }}

      - name: Make release for timegate
        env:
          MULTIPLAYER_WORKSPACE_ID: ${{ vars.MULTIPLAYER_WORKSPACE_ID }}
          MULTIPLAYER_PROJECT_ID: ${{ vars.MULTIPLAYER_PROJECT_ID }}
          MULTIPLAYER_HOST: ${{ vars.MULTIPLAYER_HOST }}
          MULTIPLAYER_API_KEY: ${{ secrets.MULTIPLAYER_API_KEY }}
          COMMIT_SHORT: ${{ steps.commit.outputs.short }}
          COMMIT_SHA: ${{ github.sha }}
          PARENT_BRANCH: ${{ github.head_ref || github.ref_name }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SERVICE_VERSION: ${{ env.DOCKER_TAG }}
        run: |
          cd ./services/timegate
          bash ../../create-multiplayer-release.sh

      - name: Build and push vault-of-time
        uses: docker/build-push-action@v6
        with:
          context: ./services/vault-of-time
          push: true
          tags: multiplayerapp/vault-of-time:${{ env.DOCKER_TAG }}
          build-args: |
            SERVICE_VERSION: ${{ env.DOCKER_TAG }}

      - name: Make release for vault-of-time
        env:
          MULTIPLAYER_WORKSPACE_ID: ${{ vars.MULTIPLAYER_WORKSPACE_ID }}
          MULTIPLAYER_PROJECT_ID: ${{ vars.MULTIPLAYER_PROJECT_ID }}
          MULTIPLAYER_HOST: ${{ vars.MULTIPLAYER_HOST }}
          MULTIPLAYER_API_KEY: ${{ secrets.MULTIPLAYER_API_KEY }}
          COMMIT_SHORT: ${{ steps.commit.outputs.short }}
          COMMIT_SHA: ${{ github.sha }}
          PARENT_BRANCH: ${{ github.head_ref || github.ref_name }}
          BRANCH_NAME: ${{ github.head_ref || github.ref_name }}
          SERVICE_VERSION: ${{ env.DOCKER_TAG }}
        run: |
          cd ./services/vault-of-time
          bash ../../create-multiplayer-release.sh
