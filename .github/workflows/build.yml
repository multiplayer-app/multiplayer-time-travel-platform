name: build

on:
  push:

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ vars.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Docker meta
        id: docker_meta
        uses: docker/metadata-action@v4
        with:
          images: |
            multiplayerapp/dialogue-hub
            multiplayerapp/epoch-engine
            multiplayerapp/minds-of-time
            multiplayerapp/timegate
            multiplayerapp/vault-of-time
          tags: |
            type=sha,prefix={{branch}}-

      - name: Build and push dialogue-hub
        uses: docker/build-push-action@v6
        with:
          context: ./services/dialogue-hub
          push: true
          tags: multiplayerapp/dialogue-hub:${{ steps.docker_meta.outputs.tags }}

      - name: Build and push epoch-engine
        uses: docker/build-push-action@v6
        with:
          context: ./services/epoch-engine
          push: true
          tags: multiplayerapp/epoch-engine:${{ steps.docker_meta.outputs.tags }}

      - name: Build and push minds-of-time
        uses: docker/build-push-action@v6
        with:
          context: ./services/minds-of-time
          push: true
          tags: multiplayerapp/minds-of-time:${{ steps.docker_meta.outputs.tags }}

      - name: Build and push timegate
        uses: docker/build-push-action@v6
        with:
          context: ./services/timegate
          push: true
          tags: multiplayerapp/timegate:${{ steps.docker_meta.outputs.tags }}

      - name: Build and push vault-of-time
        uses: docker/build-push-action@v6
        with:
          context: ./services/vault-of-time
          push: true
          tags: multiplayerapp/vault-of-time:${{ steps.docker_meta.outputs.tags }}
